spring:
  config:
    import: classpath:secret.yml

  data:
    redis:
      port: ${PROD.REDIS.PORT}
      host: ${PROD.REDIS.HOST}
      timeout: ${PROD.REDIS.TIMEOUT}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        check_nullability: true
        format-sql: true
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 1000
    open-in-view: false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${PROD.DATABASE.URL}
    username: ${PROD.DATABASE.USERNAME}
    password: ${PROD.DATABASE.PASSWORD}
  jwt:
    secret:
      key: ${PROD.AUTH.JWT.SECRET.KEY}
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: ${PROD.AUTH.OAUTH.PROVIDER.KAKAO.authorization-uri}
            token-uri: ${PROD.AUTH.OAUTH.PROVIDER.KAKAO.token-uri}
            user-info-uri: ${PROD.AUTH.OAUTH.PROVIDER.KAKAO.user-info-uri}
            user-name-attribute: ${PROD.AUTH.OAUTH.PROVIDER.KAKAO.user-name-attribute}
        registration:
          kakao:
            client-id: ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.client-id}
            client-secret: ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.client-secret}
            client-authentication-method: ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.client-authentication-method}
            redirect-uri: ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.redirect-uri}
            authorization-grant-type: ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.authorization-grant-type}
            client-name: ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.client-name}
            scope:
              - ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.scope[0]}
              - ${PROD.AUTH.OAUTH.REGISTRATION.KAKAO.scope[1]}